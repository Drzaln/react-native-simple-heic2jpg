name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/actions/setup

      - name: Lint files
        run: yarn lint

      - name: Typecheck files
        run: yarn typecheck

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/actions/setup

      - name: Run unit tests
        run: yarn test --maxWorkers=2 --coverage

  build-library:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/actions/setup

      - name: Build package
        run: yarn prepack

  build-android:
    runs-on: ubuntu-latest
    env:
      TURBO_CACHE_DIR: .turbo/android
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/actions/setup

      - name: Cache turborepo for Android
        uses: actions/cache@v3
        with:
          path: ${{ env.TURBO_CACHE_DIR }}
          key: ${{ runner.os }}-turborepo-android-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-turborepo-android-

      - name: Check turborepo cache for Android
        run: |
          echo "Running Turbo Dry Run for Android Build"

          # Turbo 명령어 실행 및 오류 로그 확인
          TURBO_OUTPUT=$(yarn --silent turbo run build:android --cache-dir='${{ env.TURBO_CACHE_DIR }}' --dry=json 2>&1)

          # Turbo 출력 내용 확인
          echo "Turbo Output: $TURBO_OUTPUT"

          # Turbo 명령어가 실패했을 경우 처리
          if [[ $? -ne 0 ]]; then
            echo "Error: Turbo command failed. Check the output above."
            exit 1
          fi

          # 출력이 비어 있거나 유효하지 않을 경우 처리
          if [[ -z "$TURBO_OUTPUT" ]]; then
            echo "Error: Turbo output is empty or invalid."
            exit 1
          fi

          # JSON 파싱 시도
          TURBO_CACHE_STATUS=$(node -e "
            let output = '$TURBO_OUTPUT';
            try {
              let parsed = JSON.parse(output);
              let status = parsed.tasks.find(t => t.task === 'build:android')?.cache?.status;
              console.log(status || 'MISS');
            } catch (e) {
              console.error('Failed to parse Turbo output as JSON.');
              process.exit(1);
            }
          ")

          if [[ $TURBO_CACHE_STATUS == "HIT" ]]; then
            echo "turbo_cache_hit=1" >> $GITHUB_ENV
          else
            echo "Turbo cache miss or invalid status."
          fi
        shell: bash

      - name: Install JDK
        if: env.turbo_cache_hit != '1'
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Finalize Android SDK
        if: env.turbo_cache_hit != '1'
        run: |
          /bin/bash -c "yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses > /dev/null"

      - name: Cache Gradle
        if: env.turbo_cache_hit != '1'
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/wrapper
            ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('example/android/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build example for Android
        run: |
          yarn turbo run build:android --cache-dir="${{ env.TURBO_CACHE_DIR }}"
